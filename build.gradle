plugins {
    id 'java-library'

    id 'fabric-loom' version '1.3-SNAPSHOT' apply(false)
    // uses qouteall's fork of fabric loom, see settings.gradle

    id 'maven-publish'

    id 'io.github.juuxel.loom-vineflower' version '1.11.0' // https://github.com/Juuxel/loom-vineflower
}

allprojects {
    apply plugin: 'java-library'
    apply plugin: 'fabric-loom'
    apply plugin: 'maven-publish'
}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    flatDir {
        dirs 'deps'
    }
}

allprojects {

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    version = rootProject.mod_version

    repositories {
        mavenCentral()
        mavenLocal()
        maven {
            name = 'JitPack'
            url = 'https://jitpack.io'
        }
        maven { url "https://maven.shedaniel.me/" }

        // for sodium
        maven {
            name = "Modrinth"
            url = "https://api.modrinth.com/maven"
            content {
                includeGroup "maven.modrinth"
            }
        }

        // for parchment
        maven {
            url = "https://maven.parchmentmc.org"
        }

        // for cardinal components that gravity api uses
        maven {
            name = 'Ladysnake'
            url = 'https://maven.ladysnake.org/releases'
        }

        // geckolib, for testing with portal gun
        maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }


    }

    tasks.withType(JavaCompile).configureEach {
        options.encoding = "UTF-8"
        it.options.release = 17
    }

    dependencies {
        minecraft "com.mojang:minecraft:${project.minecraft_version}"

        mappings loom.layered() {
            officialMojangMappings() {
                setNameSyntheticMembers(false)
            }
            parchment("org.parchmentmc.data:parchment-1.19.3:2022.12.18")
        }

        modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

        modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}") {
            exclude module: "fabric-gametest-api-v1"
            // for now, the gametest module makes client unable to login dev env server
        }

        modImplementation("me.shedaniel.cloth:cloth-config-fabric:${cloth_config_version}") {
            exclude(group: "net.fabricmc.fabric-api")
        }
        modImplementation "maven.modrinth:modmenu:${modmenu_version}"

        modCompileOnly("com.github.Virtuoel:Pehkui:3.7.5", {
            exclude group: "net.fabricmc.fabric-api"
        })

        modImplementation "maven.modrinth:sodium:mc1.20-0.4.10"

        modCompileOnly 'maven.modrinth:iris:1.6.4+1.20'
//        implementation "org.anarres:jcpp:1.4.14" // for iris
//        implementation 'io.github.douira:glsl-transformer:2.0.0-pre13' // for iris
//        implementation 'org.antlr:antlr4-runtime:4.11.1' // for iris

        modImplementation("com.github.qouteall:GravityChanger:v1.0.2-mc1.20.1") {
            transitive = false
            exclude(group: "net.fabricmc.fabric-api")
        }

        modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-base:5.2.1"
        modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:5.2.1"
        modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-world:5.2.1"

        implementation("com.github.llamalad7.mixinextras:mixinextras-fabric:${mixin_extras_version}")
        annotationProcessor("com.github.llamalad7.mixinextras:mixinextras-fabric:${mixin_extras_version}")

        modImplementation "com.github.qouteall:DimensionDataFix:${dim_data_fix_version}"
    }

    processResources {
        inputs.property "version", project.version

        filesMatching("fabric.mod.json") {
            expand "version": project.version
        }
    }

    java {
        // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
        // if it is present.
        // If you remove this line, sources will not be generated.
        withSourcesJar()
    }

    loom {
        // from qouteall's fork of fabric loom
        // https://github.com/qouteall/fabric-loom/blob/dev/1.3/src/main/java/net/fabricmc/loom/configuration/providers/minecraft/mapped/ProcessedNamedMinecraftProvider.java#L136
        forceShareMinecraftJarBetweenSubModules = true
    }

}

// change the output file name
remapJar {
    afterEvaluate {
        archiveFileName = "${project.archives_base_name}-${project.mod_version}-mc${project.minecraft_version}-fabric.jar"
    }
}


jar {
    from "LICENSE"
}

subprojects {
    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
            }
        }
        // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
        repositories {
            // Add repositories to publish to here.
            // Notice: This block does NOT have the same function as the block in the top level.
            // The repositories here will be used for publishing your artifact, not for
            // retrieving dependencies.
        }
    }
}

subprojects.each { remapJar.dependsOn("${it.path}:remapJar") }

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

dependencies {

    // for testing with dimthread
//    implementation "com.github.wearblackallday:JavaUtils:bd58640372"

//    modRuntimeOnly ("supercoder79:databreaker:0.2.8") {
//        exclude module: "fabric-loader"
//    }

//    modImplementation 'maven.modrinth:lithium:mc1.19.3-0.10.4'

    modImplementation ("me.shedaniel.cloth:cloth-config-fabric:${cloth_config_version}") {
        transitive = false
        exclude(group: "net.fabricmc.fabric-api")
    }
    include "me.shedaniel.cloth:cloth-config-fabric:${cloth_config_version}"

    include("com.github.llamalad7.mixinextras:mixinextras-fabric:${mixin_extras_version}")

    include "com.github.qouteall:DimensionDataFix:${dim_data_fix_version}"

    // for testing portal gun
//    modImplementation ('software.bernie.geckolib:geckolib-fabric-1.19.4:4.1.3') {
//        transitive(false)
//    }

    fileTree(dir: 'deps', include: '*.jar').each {
        String baseName = it.name.replace(".jar", "")
        String version = "0.1.0"
        int split = baseName.lastIndexOf('-')

        if (split != -1) {
            version = baseName.substring(split + 1)
            baseName = baseName.substring(0, split)
        }

        String name = "testmod:${baseName}:${version}"

        System.out.println("Found test mod: " + it.name.replace(".jar", "") + " -> " + name)

        modImplementation name
//        modCompileOnly name
//        modRuntime name
    }

    // for test with create
//    modImplementation(include("io.github.fabricators_of_create:Porting-Lib:${project.port_lib_version}+${project.minecraft_version}.${project.port_lib_hash}"))
//    modImplementation(include("me.alphamode:ForgeTags:${project.forge_tags_version}"))
//    modImplementation(include("com.electronwill.night-config:core:${project.night_config_core_version}"))
//    modImplementation(include("com.electronwill.night-config:toml:${project.night_config_toml_version}"))
//    modImplementation(include("curse.maven:forge-config-api-port-fabric-547434:${project.config_api_id}")) { transitive = false }
//    modImplementation(include("com.tterrag.registrate:Registrate:${project.registrate_version}"))
//    modImplementation(include("com.jozufozu.flywheel:Flywheel-Fabric:${project.flywheel_version}"))
//    modImplementation(include("com.jamieswhiteshirt:reach-entity-attributes:${project.reach_entity_attributes_version}"))
//    modImplementation(include("dev.cafeteria:fake-player-api:${project.fake_player_api_version}"))
//    modImplementation(include("io.github.tropheusj:milk-lib:${project.milk_lib_version}"))
//    modImplementation(include("me.luligabi:NoIndium:${project.no_indium_version}"))
//
//    modImplementation("com.simibubi:Create:mc1.18.2_v0.4.1")

    // twilight forest
//    modImplementation("com.github.teamtwilight.twilightforest:twilightforest-fabric:4.2"){
//        exclude(group:"com.terraformersmc")
//    }
}

dependencies {
    subprojects.each {
        implementation project(path: ":${it.name}", configuration: "namedElements")
        include project("${it.name}:")
    }
}

// miscellaneous

task printClasspath {
    doLast {
        // NOTE don't forget to exclude the submod dev jar
        configurations.compileClasspath.each { println "\"" + (it.toString().replace("\\", "/")) + "\"," }
    }
}

// Enable ZGC: -XX:+UseZGC
